//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** References another document, used as a foreign key */
  Reference: { input: any; output: any; }
  JSON: { input: any; output: any; }
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String']['output'];
  title?: Maybe<Scalars['String']['output']>;
  basename: Scalars['String']['output'];
  breadcrumbs: Array<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  relativePath: Scalars['String']['output'];
  extension: Scalars['String']['output'];
  template: Scalars['String']['output'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Folder = {
  __typename?: 'Folder';
  name: Scalars['String']['output'];
  path: Scalars['String']['output'];
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean']['output'];
  hasNextPage: Scalars['Boolean']['output'];
  startCursor: Scalars['String']['output'];
  endCursor: Scalars['String']['output'];
};

export type Node = {
  id: Scalars['ID']['output'];
};

export type Document = {
  id: Scalars['ID']['output'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON']['output'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float']['output'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']['output']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  doc: Doc;
  docConnection: DocConnection;
  sidebar: Sidebar;
  sidebarConnection: SidebarConnection;
  quicklink: Quicklink;
  quicklinkConnection: QuicklinkConnection;
  members: Members;
  membersConnection: MembersConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String']['input'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryDocArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryDocConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<DocFilter>;
};


export type QuerySidebarArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QuerySidebarConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<SidebarFilter>;
};


export type QueryQuicklinkArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryQuicklinkConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<QuicklinkFilter>;
};


export type QueryMembersArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryMembersConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<MembersFilter>;
};

export type DocumentFilter = {
  doc?: InputMaybe<DocFilter>;
  sidebar?: InputMaybe<SidebarFilter>;
  quicklink?: InputMaybe<QuicklinkFilter>;
  members?: InputMaybe<MembersFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  label?: Maybe<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  format?: Maybe<Scalars['String']['output']>;
  matches?: Maybe<Scalars['String']['output']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<DocumentFilter>;
  folder?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentNode = Doc | Sidebar | Quicklink | Members | Folder;

export type Doc = Node & Document & {
  __typename?: 'Doc';
  title: Scalars['String']['output'];
  body?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type DocBodyImgFilter = {
  className?: InputMaybe<StringFilter>;
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type DocBodyTabsChildrenTabItemChildrenImgFilter = {
  className?: InputMaybe<StringFilter>;
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type BooleanFilter = {
  eq?: InputMaybe<Scalars['Boolean']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
};

export type RichTextFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
};

export type NumberFilter = {
  lt?: InputMaybe<Scalars['Float']['input']>;
  lte?: InputMaybe<Scalars['Float']['input']>;
  gte?: InputMaybe<Scalars['Float']['input']>;
  gt?: InputMaybe<Scalars['Float']['input']>;
  eq?: InputMaybe<Scalars['Float']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
};

export type DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowChildrenTinaTableCellFilter = {
  children?: InputMaybe<RichTextFilter>;
  rowSpan?: InputMaybe<NumberFilter>;
  colSpan?: InputMaybe<NumberFilter>;
};

export type DocBodyTinaTableChildrenTinaTableRowChildrenFilter = {
  TinaTableCell?: InputMaybe<DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowChildrenTinaTableCellFilter>;
};

export type DocBodyAdmonitionChildrenTinaTableChildrenTinaTableRowFilter = {
  children?: InputMaybe<DocBodyTinaTableChildrenTinaTableRowChildrenFilter>;
};

export type DocBodyTabsChildrenTabItemChildrenTinaTableChildrenFilter = {
  TinaTableRow?: InputMaybe<DocBodyAdmonitionChildrenTinaTableChildrenTinaTableRowFilter>;
};

export type DocBodyTabsChildrenTabItemChildrenTinaTableFilter = {
  topHeader?: InputMaybe<BooleanFilter>;
  leftHeader?: InputMaybe<BooleanFilter>;
  columnWidth?: InputMaybe<StringFilter>;
  className?: InputMaybe<StringFilter>;
  children?: InputMaybe<DocBodyTabsChildrenTabItemChildrenTinaTableChildrenFilter>;
};

export type DocBodyTabsChildrenTabItemChildrenFilter = {
  img?: InputMaybe<DocBodyTabsChildrenTabItemChildrenImgFilter>;
  TinaTable?: InputMaybe<DocBodyTabsChildrenTabItemChildrenTinaTableFilter>;
};

export type DocBodyTabsChildrenTabItemFilter = {
  label?: InputMaybe<StringFilter>;
  value?: InputMaybe<StringFilter>;
  children?: InputMaybe<DocBodyTabsChildrenTabItemChildrenFilter>;
};

export type DocBodyTabsChildrenFilter = {
  TabItem?: InputMaybe<DocBodyTabsChildrenTabItemFilter>;
};

export type DocBodyTabsFilter = {
  children?: InputMaybe<DocBodyTabsChildrenFilter>;
};

export type DocBodyRowChildrenColChildrenAdmonitionChildrenImgFilter = {
  className?: InputMaybe<StringFilter>;
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowChildrenTinaTableCellFilter = {
  children?: InputMaybe<RichTextFilter>;
  rowSpan?: InputMaybe<NumberFilter>;
  colSpan?: InputMaybe<NumberFilter>;
};

export type DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowChildrenFilter = {
  TinaTableCell?: InputMaybe<DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowChildrenTinaTableCellFilter>;
};

export type DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowFilter = {
  children?: InputMaybe<DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowChildrenFilter>;
};

export type DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenFilter = {
  TinaTableRow?: InputMaybe<DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowFilter>;
};

export type DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableFilter = {
  topHeader?: InputMaybe<BooleanFilter>;
  leftHeader?: InputMaybe<BooleanFilter>;
  columnWidth?: InputMaybe<StringFilter>;
  className?: InputMaybe<StringFilter>;
  children?: InputMaybe<DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenFilter>;
};

export type DocBodyAdmonitionChildrenFilter = {
  img?: InputMaybe<DocBodyRowChildrenColChildrenAdmonitionChildrenImgFilter>;
  TinaTable?: InputMaybe<DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableFilter>;
};

export type DocBodyAdmonitionFilter = {
  type?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  children?: InputMaybe<DocBodyAdmonitionChildrenFilter>;
};

export type DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowChildrenFilter = {
  TinaTableCell?: InputMaybe<DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowChildrenTinaTableCellFilter>;
};

export type DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowFilter = {
  children?: InputMaybe<DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowChildrenFilter>;
};

export type DocBodyTinaTableChildrenFilter = {
  TinaTableRow?: InputMaybe<DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowFilter>;
};

export type DocBodyTinaTableFilter = {
  topHeader?: InputMaybe<BooleanFilter>;
  leftHeader?: InputMaybe<BooleanFilter>;
  columnWidth?: InputMaybe<StringFilter>;
  className?: InputMaybe<StringFilter>;
  children?: InputMaybe<DocBodyTinaTableChildrenFilter>;
};

export type DocBodyDetailsFilter = {
  summary?: InputMaybe<StringFilter>;
  children?: InputMaybe<RichTextFilter>;
};

export type DocBodyRowChildrenColChildrenAdmonitionChildrenFilter = {
  img?: InputMaybe<DocBodyRowChildrenColChildrenAdmonitionChildrenImgFilter>;
  TinaTable?: InputMaybe<DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableFilter>;
};

export type DocBodyRowChildrenColChildrenAdmonitionFilter = {
  type?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  children?: InputMaybe<DocBodyRowChildrenColChildrenAdmonitionChildrenFilter>;
};

export type DocBodyRowChildrenColChildrenImgFilter = {
  className?: InputMaybe<StringFilter>;
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type DocBodyRowChildrenColChildrenTinaTableChildrenFilter = {
  TinaTableRow?: InputMaybe<DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowFilter>;
};

export type DocBodyRowChildrenColChildrenTinaTableFilter = {
  topHeader?: InputMaybe<BooleanFilter>;
  leftHeader?: InputMaybe<BooleanFilter>;
  columnWidth?: InputMaybe<StringFilter>;
  className?: InputMaybe<StringFilter>;
  children?: InputMaybe<DocBodyRowChildrenColChildrenTinaTableChildrenFilter>;
};

export type DocBodyRowChildrenColChildrenFilter = {
  Admonition?: InputMaybe<DocBodyRowChildrenColChildrenAdmonitionFilter>;
  img?: InputMaybe<DocBodyRowChildrenColChildrenImgFilter>;
  TinaTable?: InputMaybe<DocBodyRowChildrenColChildrenTinaTableFilter>;
};

export type DocBodyRowChildrenColFilter = {
  ratio?: InputMaybe<NumberFilter>;
  sticky?: InputMaybe<BooleanFilter>;
  children?: InputMaybe<DocBodyRowChildrenColChildrenFilter>;
};

export type DocBodyRowChildrenFilter = {
  Col?: InputMaybe<DocBodyRowChildrenColFilter>;
};

export type DocBodyRowFilter = {
  children?: InputMaybe<DocBodyRowChildrenFilter>;
};

export type DocBodyFilter = {
  img?: InputMaybe<DocBodyImgFilter>;
  Tabs?: InputMaybe<DocBodyTabsFilter>;
  Admonition?: InputMaybe<DocBodyAdmonitionFilter>;
  TinaTable?: InputMaybe<DocBodyTinaTableFilter>;
  Details?: InputMaybe<DocBodyDetailsFilter>;
  Row?: InputMaybe<DocBodyRowFilter>;
};

export type DocFilter = {
  title?: InputMaybe<StringFilter>;
  body?: InputMaybe<DocBodyFilter>;
};

export type DocConnectionEdges = {
  __typename?: 'DocConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Doc>;
};

export type DocConnection = Connection & {
  __typename?: 'DocConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<DocConnectionEdges>>>;
};

export type SidebarItemsItemsCategoryDocLink = Doc;

export type SidebarItemsItemsCategoryItemsCategoryDocLink = Doc;

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryDocLink = Doc;

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocDocument = Doc;

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDoc = {
  __typename?: 'SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDoc';
  document: SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocDocument;
  label: Scalars['String']['output'];
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLink = {
  __typename?: 'SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLink';
  title: Scalars['String']['output'];
  href: Scalars['String']['output'];
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItems = SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDoc | SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLink;

export type SidebarItemsItemsCategoryItemsCategoryItemsCategory = {
  __typename?: 'SidebarItemsItemsCategoryItemsCategoryItemsCategory';
  title: Scalars['String']['output'];
  link?: Maybe<Scalars['String']['output']>;
  docLink?: Maybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryDocLink>;
  items?: Maybe<Array<Maybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryItems>>>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsDocDocument = Doc;

export type SidebarItemsItemsCategoryItemsCategoryItemsDoc = {
  __typename?: 'SidebarItemsItemsCategoryItemsCategoryItemsDoc';
  document: SidebarItemsItemsCategoryItemsCategoryItemsDocDocument;
  label: Scalars['String']['output'];
};

export type SidebarItemsItemsCategoryItemsCategoryItemsLink = {
  __typename?: 'SidebarItemsItemsCategoryItemsCategoryItemsLink';
  title: Scalars['String']['output'];
  href: Scalars['String']['output'];
};

export type SidebarItemsItemsCategoryItemsCategoryItems = SidebarItemsItemsCategoryItemsCategoryItemsCategory | SidebarItemsItemsCategoryItemsCategoryItemsDoc | SidebarItemsItemsCategoryItemsCategoryItemsLink;

export type SidebarItemsItemsCategoryItemsCategory = {
  __typename?: 'SidebarItemsItemsCategoryItemsCategory';
  title: Scalars['String']['output'];
  link?: Maybe<Scalars['String']['output']>;
  docLink?: Maybe<SidebarItemsItemsCategoryItemsCategoryDocLink>;
  items?: Maybe<Array<Maybe<SidebarItemsItemsCategoryItemsCategoryItems>>>;
};

export type SidebarItemsItemsCategoryItemsDocDocument = Doc;

export type SidebarItemsItemsCategoryItemsDoc = {
  __typename?: 'SidebarItemsItemsCategoryItemsDoc';
  document: SidebarItemsItemsCategoryItemsDocDocument;
  label: Scalars['String']['output'];
};

export type SidebarItemsItemsCategoryItemsLink = {
  __typename?: 'SidebarItemsItemsCategoryItemsLink';
  title: Scalars['String']['output'];
  href: Scalars['String']['output'];
};

export type SidebarItemsItemsCategoryItems = SidebarItemsItemsCategoryItemsCategory | SidebarItemsItemsCategoryItemsDoc | SidebarItemsItemsCategoryItemsLink;

export type SidebarItemsItemsCategory = {
  __typename?: 'SidebarItemsItemsCategory';
  title: Scalars['String']['output'];
  link?: Maybe<Scalars['String']['output']>;
  docLink?: Maybe<SidebarItemsItemsCategoryDocLink>;
  items?: Maybe<Array<Maybe<SidebarItemsItemsCategoryItems>>>;
};

export type SidebarItemsItemsDocDocument = Doc;

export type SidebarItemsItemsDoc = {
  __typename?: 'SidebarItemsItemsDoc';
  document: SidebarItemsItemsDocDocument;
  label: Scalars['String']['output'];
};

export type SidebarItemsItemsLink = {
  __typename?: 'SidebarItemsItemsLink';
  title: Scalars['String']['output'];
  href: Scalars['String']['output'];
};

export type SidebarItemsItemsDivider = {
  __typename?: 'SidebarItemsItemsDivider';
  title: Scalars['String']['output'];
};

export type SidebarItemsItems = SidebarItemsItemsCategory | SidebarItemsItemsDoc | SidebarItemsItemsLink | SidebarItemsItemsDivider;

export type SidebarItems = {
  __typename?: 'SidebarItems';
  label: Scalars['String']['output'];
  items?: Maybe<Array<Maybe<SidebarItemsItems>>>;
};

export type Sidebar = Node & Document & {
  __typename?: 'Sidebar';
  _warning?: Maybe<Scalars['String']['output']>;
  label: Scalars['String']['output'];
  items?: Maybe<Array<Maybe<SidebarItems>>>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type SidebarItemsItemsCategoryDocLinkFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryDocLinkFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryDocLinkFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocDocumentFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocFilter = {
  document?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocDocumentFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLinkFilter = {
  title?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsFilter = {
  doc?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocFilter>;
  link?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLinkFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  docLink?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryDocLinkFilter>;
  items?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsDocDocumentFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsDocFilter = {
  document?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsDocDocumentFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsLinkFilter = {
  title?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsFilter = {
  category?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryFilter>;
  doc?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsDocFilter>;
  link?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsLinkFilter>;
};

export type SidebarItemsItemsCategoryItemsCategoryFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  docLink?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryDocLinkFilter>;
  items?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsFilter>;
};

export type SidebarItemsItemsCategoryItemsDocDocumentFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsItemsCategoryItemsDocFilter = {
  document?: InputMaybe<SidebarItemsItemsCategoryItemsDocDocumentFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarItemsItemsCategoryItemsLinkFilter = {
  title?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type SidebarItemsItemsCategoryItemsFilter = {
  category?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryFilter>;
  doc?: InputMaybe<SidebarItemsItemsCategoryItemsDocFilter>;
  link?: InputMaybe<SidebarItemsItemsCategoryItemsLinkFilter>;
};

export type SidebarItemsItemsCategoryFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  docLink?: InputMaybe<SidebarItemsItemsCategoryDocLinkFilter>;
  items?: InputMaybe<SidebarItemsItemsCategoryItemsFilter>;
};

export type SidebarItemsItemsDocDocumentFilter = {
  doc?: InputMaybe<DocFilter>;
};

export type SidebarItemsItemsDocFilter = {
  document?: InputMaybe<SidebarItemsItemsDocDocumentFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarItemsItemsLinkFilter = {
  title?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type SidebarItemsItemsDividerFilter = {
  title?: InputMaybe<StringFilter>;
};

export type SidebarItemsItemsFilter = {
  category?: InputMaybe<SidebarItemsItemsCategoryFilter>;
  doc?: InputMaybe<SidebarItemsItemsDocFilter>;
  link?: InputMaybe<SidebarItemsItemsLinkFilter>;
  divider?: InputMaybe<SidebarItemsItemsDividerFilter>;
};

export type SidebarItemsFilter = {
  label?: InputMaybe<StringFilter>;
  items?: InputMaybe<SidebarItemsItemsFilter>;
};

export type SidebarFilter = {
  _warning?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  items?: InputMaybe<SidebarItemsFilter>;
};

export type SidebarConnectionEdges = {
  __typename?: 'SidebarConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Sidebar>;
};

export type SidebarConnection = Connection & {
  __typename?: 'SidebarConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<SidebarConnectionEdges>>>;
};

export type QuicklinkQuickLinksGroupLinksQuickLink = {
  __typename?: 'QuicklinkQuickLinksGroupLinksQuickLink';
  label: Scalars['String']['output'];
  brand?: Maybe<Scalars['String']['output']>;
  url: Scalars['String']['output'];
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLink = {
  __typename?: 'QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLink';
  label: Scalars['String']['output'];
  brand?: Maybe<Scalars['String']['output']>;
  url: Scalars['String']['output'];
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLink = {
  __typename?: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLink';
  label: Scalars['String']['output'];
  brand?: Maybe<Scalars['String']['output']>;
  url: Scalars['String']['output'];
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLink = {
  __typename?: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLink';
  label: Scalars['String']['output'];
  brand?: Maybe<Scalars['String']['output']>;
  url: Scalars['String']['output'];
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinks = QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLink;

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroup = {
  __typename?: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroup';
  label: Scalars['String']['output'];
  links?: Maybe<Array<Maybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinks>>>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinks = QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLink | QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroup;

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroup = {
  __typename?: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroup';
  label: Scalars['String']['output'];
  links?: Maybe<Array<Maybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinks>>>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinks = QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLink | QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroup;

export type QuicklinkQuickLinksGroupLinksSubGroup = {
  __typename?: 'QuicklinkQuickLinksGroupLinksSubGroup';
  label: Scalars['String']['output'];
  links?: Maybe<Array<Maybe<QuicklinkQuickLinksGroupLinksSubGroupLinks>>>;
};

export type QuicklinkQuickLinksGroupLinks = QuicklinkQuickLinksGroupLinksQuickLink | QuicklinkQuickLinksGroupLinksSubGroup;

export type QuicklinkQuickLinksGroup = {
  __typename?: 'QuicklinkQuickLinksGroup';
  label: Scalars['String']['output'];
  links?: Maybe<Array<Maybe<QuicklinkQuickLinksGroupLinks>>>;
};

export type Quicklink = Node & Document & {
  __typename?: 'Quicklink';
  quickLinksGroup?: Maybe<Array<Maybe<QuicklinkQuickLinksGroup>>>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type QuicklinkQuickLinksGroupLinksQuickLinkFilter = {
  label?: InputMaybe<StringFilter>;
  brand?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLinkFilter = {
  label?: InputMaybe<StringFilter>;
  brand?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLinkFilter = {
  label?: InputMaybe<StringFilter>;
  brand?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLinkFilter = {
  label?: InputMaybe<StringFilter>;
  brand?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksFilter = {
  quickLink?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLinkFilter>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupFilter = {
  label?: InputMaybe<StringFilter>;
  links?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksFilter>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksFilter = {
  quickLink?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLinkFilter>;
  subGroup?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupFilter>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupFilter = {
  label?: InputMaybe<StringFilter>;
  links?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksFilter>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksFilter = {
  quickLink?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLinkFilter>;
  subGroup?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupFilter>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupFilter = {
  label?: InputMaybe<StringFilter>;
  links?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksFilter>;
};

export type QuicklinkQuickLinksGroupLinksFilter = {
  quickLink?: InputMaybe<QuicklinkQuickLinksGroupLinksQuickLinkFilter>;
  subGroup?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupFilter>;
};

export type QuicklinkQuickLinksGroupFilter = {
  label?: InputMaybe<StringFilter>;
  links?: InputMaybe<QuicklinkQuickLinksGroupLinksFilter>;
};

export type QuicklinkFilter = {
  quickLinksGroup?: InputMaybe<QuicklinkQuickLinksGroupFilter>;
};

export type QuicklinkConnectionEdges = {
  __typename?: 'QuicklinkConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Quicklink>;
};

export type QuicklinkConnection = Connection & {
  __typename?: 'QuicklinkConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<QuicklinkConnectionEdges>>>;
};

export type MembersMember = {
  __typename?: 'MembersMember';
  name: Scalars['String']['output'];
  position: Scalars['String']['output'];
};

export type Members = Node & Document & {
  __typename?: 'Members';
  member?: Maybe<Array<Maybe<MembersMember>>>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type MembersMemberFilter = {
  name?: InputMaybe<StringFilter>;
  position?: InputMaybe<StringFilter>;
};

export type MembersFilter = {
  member?: InputMaybe<MembersMemberFilter>;
};

export type MembersConnectionEdges = {
  __typename?: 'MembersConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Members>;
};

export type MembersConnection = Connection & {
  __typename?: 'MembersConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<MembersConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updateDoc: Doc;
  createDoc: Doc;
  updateSidebar: Sidebar;
  createSidebar: Sidebar;
  updateQuicklink: Quicklink;
  createQuicklink: Quicklink;
  updateMembers: Members;
  createMembers: Members;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String']['input'];
  relativePath: Scalars['String']['input'];
  template?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentMutation;
};


export type MutationUpdateDocArgs = {
  relativePath: Scalars['String']['input'];
  params: DocMutation;
};


export type MutationCreateDocArgs = {
  relativePath: Scalars['String']['input'];
  params: DocMutation;
};


export type MutationUpdateSidebarArgs = {
  relativePath: Scalars['String']['input'];
  params: SidebarMutation;
};


export type MutationCreateSidebarArgs = {
  relativePath: Scalars['String']['input'];
  params: SidebarMutation;
};


export type MutationUpdateQuicklinkArgs = {
  relativePath: Scalars['String']['input'];
  params: QuicklinkMutation;
};


export type MutationCreateQuicklinkArgs = {
  relativePath: Scalars['String']['input'];
  params: QuicklinkMutation;
};


export type MutationUpdateMembersArgs = {
  relativePath: Scalars['String']['input'];
  params: MembersMutation;
};


export type MutationCreateMembersArgs = {
  relativePath: Scalars['String']['input'];
  params: MembersMutation;
};

export type DocumentUpdateMutation = {
  doc?: InputMaybe<DocMutation>;
  sidebar?: InputMaybe<SidebarMutation>;
  quicklink?: InputMaybe<QuicklinkMutation>;
  members?: InputMaybe<MembersMutation>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentMutation = {
  doc?: InputMaybe<DocMutation>;
  sidebar?: InputMaybe<SidebarMutation>;
  quicklink?: InputMaybe<QuicklinkMutation>;
  members?: InputMaybe<MembersMutation>;
};

export type DocMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['JSON']['input']>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocMutation = {
  document?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLinkMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  href?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsMutation = {
  doc?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocMutation>;
  link?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLinkMutation>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsCategoryMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
  docLink?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsMutation>>>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsDocMutation = {
  document?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsLinkMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  href?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarItemsItemsCategoryItemsCategoryItemsMutation = {
  category?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsCategoryMutation>;
  doc?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsDocMutation>;
  link?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsLinkMutation>;
};

export type SidebarItemsItemsCategoryItemsCategoryMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
  docLink?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarItemsItemsCategoryItemsCategoryItemsMutation>>>;
};

export type SidebarItemsItemsCategoryItemsDocMutation = {
  document?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarItemsItemsCategoryItemsLinkMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  href?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarItemsItemsCategoryItemsMutation = {
  category?: InputMaybe<SidebarItemsItemsCategoryItemsCategoryMutation>;
  doc?: InputMaybe<SidebarItemsItemsCategoryItemsDocMutation>;
  link?: InputMaybe<SidebarItemsItemsCategoryItemsLinkMutation>;
};

export type SidebarItemsItemsCategoryMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
  docLink?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarItemsItemsCategoryItemsMutation>>>;
};

export type SidebarItemsItemsDocMutation = {
  document?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarItemsItemsLinkMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  href?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarItemsItemsDividerMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarItemsItemsMutation = {
  category?: InputMaybe<SidebarItemsItemsCategoryMutation>;
  doc?: InputMaybe<SidebarItemsItemsDocMutation>;
  link?: InputMaybe<SidebarItemsItemsLinkMutation>;
  divider?: InputMaybe<SidebarItemsItemsDividerMutation>;
};

export type SidebarItemsMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarItemsItemsMutation>>>;
};

export type SidebarMutation = {
  _warning?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarItemsMutation>>>;
};

export type QuicklinkQuickLinksGroupLinksQuickLinkMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  brand?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLinkMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  brand?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLinkMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  brand?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLinkMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  brand?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksMutation = {
  quickLink?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLinkMutation>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  links?: InputMaybe<Array<InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksMutation>>>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksMutation = {
  quickLink?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLinkMutation>;
  subGroup?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupMutation>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  links?: InputMaybe<Array<InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksMutation>>>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupLinksMutation = {
  quickLink?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLinkMutation>;
  subGroup?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupMutation>;
};

export type QuicklinkQuickLinksGroupLinksSubGroupMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  links?: InputMaybe<Array<InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupLinksMutation>>>;
};

export type QuicklinkQuickLinksGroupLinksMutation = {
  quickLink?: InputMaybe<QuicklinkQuickLinksGroupLinksQuickLinkMutation>;
  subGroup?: InputMaybe<QuicklinkQuickLinksGroupLinksSubGroupMutation>;
};

export type QuicklinkQuickLinksGroupMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  links?: InputMaybe<Array<InputMaybe<QuicklinkQuickLinksGroupLinksMutation>>>;
};

export type QuicklinkMutation = {
  quickLinksGroup?: InputMaybe<Array<InputMaybe<QuicklinkQuickLinksGroupMutation>>>;
};

export type MembersMemberMutation = {
  name?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['String']['input']>;
};

export type MembersMutation = {
  member?: InputMaybe<Array<InputMaybe<MembersMemberMutation>>>;
};

export type DocPartsFragment = { __typename: 'Doc', title: string, body?: any | null };

export type SidebarPartsFragment = { __typename: 'Sidebar', _warning?: string | null, label: string, items?: Array<{ __typename: 'SidebarItems', label: string, items?: Array<{ __typename: 'SidebarItemsItemsCategory', title: string, link?: string | null, docLink?: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, items?: Array<{ __typename: 'SidebarItemsItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, items?: Array<{ __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, items?: Array<{ __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsItemsCategoryItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsLink', title: string, href: string } | { __typename: 'SidebarItemsItemsDivider', title: string } | null> | null } | null> | null };

export type QuicklinkPartsFragment = { __typename: 'Quicklink', quickLinksGroup?: Array<{ __typename: 'QuicklinkQuickLinksGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksQuickLink', label: string, brand?: string | null, url: string } | { __typename: 'QuicklinkQuickLinksGroupLinksSubGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLink', label: string, brand?: string | null, url: string } | { __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLink', label: string, brand?: string | null, url: string } | { __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLink', label: string, brand?: string | null, url: string } | null> | null } | null> | null } | null> | null } | null> | null } | null> | null };

export type MembersPartsFragment = { __typename: 'Members', member?: Array<{ __typename: 'MembersMember', name: string, position: string } | null> | null };

export type DocQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type DocQuery = { __typename?: 'Query', doc: { __typename: 'Doc', id: string, title: string, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type DocConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<DocFilter>;
}>;


export type DocConnectionQuery = { __typename?: 'Query', docConnection: { __typename?: 'DocConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'DocConnectionEdges', cursor: string, node?: { __typename: 'Doc', id: string, title: string, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type SidebarQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type SidebarQuery = { __typename?: 'Query', sidebar: { __typename: 'Sidebar', id: string, _warning?: string | null, label: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, items?: Array<{ __typename: 'SidebarItems', label: string, items?: Array<{ __typename: 'SidebarItemsItemsCategory', title: string, link?: string | null, docLink?: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, items?: Array<{ __typename: 'SidebarItemsItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, items?: Array<{ __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, items?: Array<{ __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsItemsCategoryItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsLink', title: string, href: string } | { __typename: 'SidebarItemsItemsDivider', title: string } | null> | null } | null> | null } };

export type SidebarConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<SidebarFilter>;
}>;


export type SidebarConnectionQuery = { __typename?: 'Query', sidebarConnection: { __typename?: 'SidebarConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'SidebarConnectionEdges', cursor: string, node?: { __typename: 'Sidebar', id: string, _warning?: string | null, label: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, items?: Array<{ __typename: 'SidebarItems', label: string, items?: Array<{ __typename: 'SidebarItemsItemsCategory', title: string, link?: string | null, docLink?: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, items?: Array<{ __typename: 'SidebarItemsItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, items?: Array<{ __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsCategory', title: string, link?: string | null, docLink?: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, items?: Array<{ __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsCategoryItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsItemsCategoryItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsCategoryItemsLink', title: string, href: string } | null> | null } | { __typename: 'SidebarItemsItemsDoc', label: string, document: { __typename: 'Doc', title: string, body?: any | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } } | { __typename: 'SidebarItemsItemsLink', title: string, href: string } | { __typename: 'SidebarItemsItemsDivider', title: string } | null> | null } | null> | null } | null } | null> | null } };

export type QuicklinkQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type QuicklinkQuery = { __typename?: 'Query', quicklink: { __typename: 'Quicklink', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, quickLinksGroup?: Array<{ __typename: 'QuicklinkQuickLinksGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksQuickLink', label: string, brand?: string | null, url: string } | { __typename: 'QuicklinkQuickLinksGroupLinksSubGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLink', label: string, brand?: string | null, url: string } | { __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLink', label: string, brand?: string | null, url: string } | { __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLink', label: string, brand?: string | null, url: string } | null> | null } | null> | null } | null> | null } | null> | null } | null> | null } };

export type QuicklinkConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<QuicklinkFilter>;
}>;


export type QuicklinkConnectionQuery = { __typename?: 'Query', quicklinkConnection: { __typename?: 'QuicklinkConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'QuicklinkConnectionEdges', cursor: string, node?: { __typename: 'Quicklink', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, quickLinksGroup?: Array<{ __typename: 'QuicklinkQuickLinksGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksQuickLink', label: string, brand?: string | null, url: string } | { __typename: 'QuicklinkQuickLinksGroupLinksSubGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLink', label: string, brand?: string | null, url: string } | { __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLink', label: string, brand?: string | null, url: string } | { __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroup', label: string, links?: Array<{ __typename: 'QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLink', label: string, brand?: string | null, url: string } | null> | null } | null> | null } | null> | null } | null> | null } | null> | null } | null } | null> | null } };

export type MembersQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type MembersQuery = { __typename?: 'Query', members: { __typename: 'Members', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, member?: Array<{ __typename: 'MembersMember', name: string, position: string } | null> | null } };

export type MembersConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<MembersFilter>;
}>;


export type MembersConnectionQuery = { __typename?: 'Query', membersConnection: { __typename?: 'MembersConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'MembersConnectionEdges', cursor: string, node?: { __typename: 'Members', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, member?: Array<{ __typename: 'MembersMember', name: string, position: string } | null> | null } | null } | null> | null } };

export const DocPartsFragmentDoc = gql`
    fragment DocParts on Doc {
  __typename
  title
  body
}
    `;
export const SidebarPartsFragmentDoc = gql`
    fragment SidebarParts on Sidebar {
  __typename
  _warning
  label
  items {
    __typename
    label
    items {
      __typename
      ... on SidebarItemsItemsCategory {
        title
        link
        docLink {
          ... on Doc {
            __typename
            title
            body
          }
          ... on Document {
            _sys {
              filename
              basename
              breadcrumbs
              path
              relativePath
              extension
            }
            id
          }
        }
        items {
          __typename
          ... on SidebarItemsItemsCategoryItemsCategory {
            title
            link
            docLink {
              ... on Doc {
                __typename
                title
                body
              }
              ... on Document {
                _sys {
                  filename
                  basename
                  breadcrumbs
                  path
                  relativePath
                  extension
                }
                id
              }
            }
            items {
              __typename
              ... on SidebarItemsItemsCategoryItemsCategoryItemsCategory {
                title
                link
                docLink {
                  ... on Doc {
                    __typename
                    title
                    body
                  }
                  ... on Document {
                    _sys {
                      filename
                      basename
                      breadcrumbs
                      path
                      relativePath
                      extension
                    }
                    id
                  }
                }
                items {
                  __typename
                  ... on SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDoc {
                    document {
                      ... on Doc {
                        __typename
                        title
                        body
                      }
                      ... on Document {
                        _sys {
                          filename
                          basename
                          breadcrumbs
                          path
                          relativePath
                          extension
                        }
                        id
                      }
                    }
                    label
                  }
                  ... on SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLink {
                    title
                    href
                  }
                }
              }
              ... on SidebarItemsItemsCategoryItemsCategoryItemsDoc {
                document {
                  ... on Doc {
                    __typename
                    title
                    body
                  }
                  ... on Document {
                    _sys {
                      filename
                      basename
                      breadcrumbs
                      path
                      relativePath
                      extension
                    }
                    id
                  }
                }
                label
              }
              ... on SidebarItemsItemsCategoryItemsCategoryItemsLink {
                title
                href
              }
            }
          }
          ... on SidebarItemsItemsCategoryItemsDoc {
            document {
              ... on Doc {
                __typename
                title
                body
              }
              ... on Document {
                _sys {
                  filename
                  basename
                  breadcrumbs
                  path
                  relativePath
                  extension
                }
                id
              }
            }
            label
          }
          ... on SidebarItemsItemsCategoryItemsLink {
            title
            href
          }
        }
      }
      ... on SidebarItemsItemsDoc {
        document {
          ... on Doc {
            __typename
            title
            body
          }
          ... on Document {
            _sys {
              filename
              basename
              breadcrumbs
              path
              relativePath
              extension
            }
            id
          }
        }
        label
      }
      ... on SidebarItemsItemsLink {
        title
        href
      }
      ... on SidebarItemsItemsDivider {
        title
      }
    }
  }
}
    `;
export const QuicklinkPartsFragmentDoc = gql`
    fragment QuicklinkParts on Quicklink {
  __typename
  quickLinksGroup {
    __typename
    label
    links {
      __typename
      ... on QuicklinkQuickLinksGroupLinksQuickLink {
        label
        brand
        url
      }
      ... on QuicklinkQuickLinksGroupLinksSubGroup {
        label
        links {
          __typename
          ... on QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLink {
            label
            brand
            url
          }
          ... on QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroup {
            label
            links {
              __typename
              ... on QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLink {
                label
                brand
                url
              }
              ... on QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroup {
                label
                links {
                  __typename
                  ... on QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLink {
                    label
                    brand
                    url
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
    `;
export const MembersPartsFragmentDoc = gql`
    fragment MembersParts on Members {
  __typename
  member {
    __typename
    name
    position
  }
}
    `;
export const DocDocument = gql`
    query doc($relativePath: String!) {
  doc(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...DocParts
  }
}
    ${DocPartsFragmentDoc}`;
export const DocConnectionDocument = gql`
    query docConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: DocFilter) {
  docConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...DocParts
      }
    }
  }
}
    ${DocPartsFragmentDoc}`;
export const SidebarDocument = gql`
    query sidebar($relativePath: String!) {
  sidebar(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...SidebarParts
  }
}
    ${SidebarPartsFragmentDoc}`;
export const SidebarConnectionDocument = gql`
    query sidebarConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: SidebarFilter) {
  sidebarConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...SidebarParts
      }
    }
  }
}
    ${SidebarPartsFragmentDoc}`;
export const QuicklinkDocument = gql`
    query quicklink($relativePath: String!) {
  quicklink(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...QuicklinkParts
  }
}
    ${QuicklinkPartsFragmentDoc}`;
export const QuicklinkConnectionDocument = gql`
    query quicklinkConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: QuicklinkFilter) {
  quicklinkConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...QuicklinkParts
      }
    }
  }
}
    ${QuicklinkPartsFragmentDoc}`;
export const MembersDocument = gql`
    query members($relativePath: String!) {
  members(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...MembersParts
  }
}
    ${MembersPartsFragmentDoc}`;
export const MembersConnectionDocument = gql`
    query membersConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: MembersFilter) {
  membersConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...MembersParts
      }
    }
  }
}
    ${MembersPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      doc(variables: DocQueryVariables, options?: C): Promise<{data: DocQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: DocQueryVariables, query: string}> {
        return requester<{data: DocQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: DocQueryVariables, query: string}, DocQueryVariables>(DocDocument, variables, options);
      },
    docConnection(variables?: DocConnectionQueryVariables, options?: C): Promise<{data: DocConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: DocConnectionQueryVariables, query: string}> {
        return requester<{data: DocConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: DocConnectionQueryVariables, query: string}, DocConnectionQueryVariables>(DocConnectionDocument, variables, options);
      },
    sidebar(variables: SidebarQueryVariables, options?: C): Promise<{data: SidebarQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SidebarQueryVariables, query: string}> {
        return requester<{data: SidebarQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SidebarQueryVariables, query: string}, SidebarQueryVariables>(SidebarDocument, variables, options);
      },
    sidebarConnection(variables?: SidebarConnectionQueryVariables, options?: C): Promise<{data: SidebarConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SidebarConnectionQueryVariables, query: string}> {
        return requester<{data: SidebarConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SidebarConnectionQueryVariables, query: string}, SidebarConnectionQueryVariables>(SidebarConnectionDocument, variables, options);
      },
    quicklink(variables: QuicklinkQueryVariables, options?: C): Promise<{data: QuicklinkQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: QuicklinkQueryVariables, query: string}> {
        return requester<{data: QuicklinkQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: QuicklinkQueryVariables, query: string}, QuicklinkQueryVariables>(QuicklinkDocument, variables, options);
      },
    quicklinkConnection(variables?: QuicklinkConnectionQueryVariables, options?: C): Promise<{data: QuicklinkConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: QuicklinkConnectionQueryVariables, query: string}> {
        return requester<{data: QuicklinkConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: QuicklinkConnectionQueryVariables, query: string}, QuicklinkConnectionQueryVariables>(QuicklinkConnectionDocument, variables, options);
      },
    members(variables: MembersQueryVariables, options?: C): Promise<{data: MembersQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: MembersQueryVariables, query: string}> {
        return requester<{data: MembersQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: MembersQueryVariables, query: string}, MembersQueryVariables>(MembersDocument, variables, options);
      },
    membersConnection(variables?: MembersConnectionQueryVariables, options?: C): Promise<{data: MembersConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: MembersConnectionQueryVariables, query: string}> {
        return requester<{data: MembersConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: MembersConnectionQueryVariables, query: string}, MembersConnectionQueryVariables>(MembersConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (
  client: TinaClient,
  options?: { branch?: string }
) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: { branch?: string },
    client
  ) => Promise<any> = async (doc, vars, options) => {
    let url = client.apiUrl
    if (options?.branch) {
      const index = client.apiUrl.lastIndexOf('/')
      url = client.apiUrl.substring(0, index + 1) + options.branch
    }
    const data = await client.request({
      query: doc,
      variables: vars,
      url,
    })

    return { data: data?.data, errors: data?.errors, query: doc, variables: vars || {} }
  }

  return requester
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(
      createClient({
        url: "http://localhost:4001/graphql",
        queries,
      })
    )
  )

export const queries = (
  client: TinaClient,
  options?: {
    branch?: string
  }
) => {
  const requester = generateRequester(client, options)
  return getSdk(requester)
}

  