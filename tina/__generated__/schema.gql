# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type Folder {
  name: String!
  path: String!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  doc(relativePath: String): Doc!
  docConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: DocFilter): DocConnection!
  sidebar(relativePath: String): Sidebar!
  sidebarConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: SidebarFilter): SidebarConnection!
  quicklink(relativePath: String): Quicklink!
  quicklinkConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: QuicklinkFilter): QuicklinkConnection!
}

input DocumentFilter {
  doc: DocFilter
  sidebar: SidebarFilter
  quicklink: QuicklinkFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter, folder: String): DocumentConnection!
}

union DocumentNode = Doc | Sidebar | Quicklink | Folder

type Doc implements Node & Document {
  title: String!
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input DocBodyImgFilter {
  className: StringFilter
  src: ImageFilter
  alt: StringFilter
}

input DocBodyTabsChildrenTabItemChildrenImgFilter {
  className: StringFilter
  src: ImageFilter
  alt: StringFilter
}

input BooleanFilter {
  eq: Boolean
  exists: Boolean
}

input RichTextFilter {
  startsWith: String
  eq: String
  exists: Boolean
}

input NumberFilter {
  lt: Float
  lte: Float
  gte: Float
  gt: Float
  eq: Float
  exists: Boolean
  in: [Float]
}

input DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowChildrenTinaTableCellFilter {
  children: RichTextFilter
  rowSpan: NumberFilter
  colSpan: NumberFilter
}

input DocBodyTinaTableChildrenTinaTableRowChildrenFilter {
  TinaTableCell: DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowChildrenTinaTableCellFilter
}

input DocBodyAdmonitionChildrenTinaTableChildrenTinaTableRowFilter {
  children: DocBodyTinaTableChildrenTinaTableRowChildrenFilter
}

input DocBodyTabsChildrenTabItemChildrenTinaTableChildrenFilter {
  TinaTableRow: DocBodyAdmonitionChildrenTinaTableChildrenTinaTableRowFilter
}

input DocBodyTabsChildrenTabItemChildrenTinaTableFilter {
  topHeader: BooleanFilter
  leftHeader: BooleanFilter
  columnWidth: StringFilter
  className: StringFilter
  children: DocBodyTabsChildrenTabItemChildrenTinaTableChildrenFilter
}

input DocBodyTabsChildrenTabItemChildrenFilter {
  img: DocBodyTabsChildrenTabItemChildrenImgFilter
  TinaTable: DocBodyTabsChildrenTabItemChildrenTinaTableFilter
}

input DocBodyTabsChildrenTabItemFilter {
  label: StringFilter
  value: StringFilter
  children: DocBodyTabsChildrenTabItemChildrenFilter
}

input DocBodyTabsChildrenFilter {
  TabItem: DocBodyTabsChildrenTabItemFilter
}

input DocBodyTabsFilter {
  children: DocBodyTabsChildrenFilter
}

input DocBodyRowChildrenColChildrenAdmonitionChildrenImgFilter {
  className: StringFilter
  src: ImageFilter
  alt: StringFilter
}

input DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowChildrenTinaTableCellFilter {
  children: RichTextFilter
  rowSpan: NumberFilter
  colSpan: NumberFilter
}

input DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowChildrenFilter {
  TinaTableCell: DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowChildrenTinaTableCellFilter
}

input DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowFilter {
  children: DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowChildrenFilter
}

input DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenFilter {
  TinaTableRow: DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenTinaTableRowFilter
}

input DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableFilter {
  topHeader: BooleanFilter
  leftHeader: BooleanFilter
  columnWidth: StringFilter
  className: StringFilter
  children: DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableChildrenFilter
}

input DocBodyAdmonitionChildrenFilter {
  img: DocBodyRowChildrenColChildrenAdmonitionChildrenImgFilter
  TinaTable: DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableFilter
}

input DocBodyAdmonitionFilter {
  type: StringFilter
  title: StringFilter
  children: DocBodyAdmonitionChildrenFilter
}

input DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowChildrenFilter {
  TinaTableCell: DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowChildrenTinaTableCellFilter
}

input DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowFilter {
  children: DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowChildrenFilter
}

input DocBodyTinaTableChildrenFilter {
  TinaTableRow: DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowFilter
}

input DocBodyTinaTableFilter {
  topHeader: BooleanFilter
  leftHeader: BooleanFilter
  columnWidth: StringFilter
  className: StringFilter
  children: DocBodyTinaTableChildrenFilter
}

input DocBodyDetailsFilter {
  summary: StringFilter
  children: RichTextFilter
}

input DocBodyRowChildrenColChildrenAdmonitionChildrenFilter {
  img: DocBodyRowChildrenColChildrenAdmonitionChildrenImgFilter
  TinaTable: DocBodyRowChildrenColChildrenAdmonitionChildrenTinaTableFilter
}

input DocBodyRowChildrenColChildrenAdmonitionFilter {
  type: StringFilter
  title: StringFilter
  children: DocBodyRowChildrenColChildrenAdmonitionChildrenFilter
}

input DocBodyRowChildrenColChildrenImgFilter {
  className: StringFilter
  src: ImageFilter
  alt: StringFilter
}

input DocBodyRowChildrenColChildrenTinaTableChildrenFilter {
  TinaTableRow: DocBodyRowChildrenColChildrenTinaTableChildrenTinaTableRowFilter
}

input DocBodyRowChildrenColChildrenTinaTableFilter {
  topHeader: BooleanFilter
  leftHeader: BooleanFilter
  columnWidth: StringFilter
  className: StringFilter
  children: DocBodyRowChildrenColChildrenTinaTableChildrenFilter
}

input DocBodyRowChildrenColChildrenFilter {
  Admonition: DocBodyRowChildrenColChildrenAdmonitionFilter
  img: DocBodyRowChildrenColChildrenImgFilter
  TinaTable: DocBodyRowChildrenColChildrenTinaTableFilter
}

input DocBodyRowChildrenColFilter {
  ratio: NumberFilter
  sticky: BooleanFilter
  children: DocBodyRowChildrenColChildrenFilter
}

input DocBodyRowChildrenFilter {
  Col: DocBodyRowChildrenColFilter
}

input DocBodyRowFilter {
  children: DocBodyRowChildrenFilter
}

input DocBodyFilter {
  img: DocBodyImgFilter
  Tabs: DocBodyTabsFilter
  Admonition: DocBodyAdmonitionFilter
  TinaTable: DocBodyTinaTableFilter
  Details: DocBodyDetailsFilter
  Row: DocBodyRowFilter
}

input DocFilter {
  title: StringFilter
  body: DocBodyFilter
}

type DocConnectionEdges {
  cursor: String!
  node: Doc
}

type DocConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocConnectionEdges]
}

union SidebarItemsItemsCategoryDocLink = Doc

union SidebarItemsItemsCategoryItemsCategoryDocLink = Doc

union SidebarItemsItemsCategoryItemsCategoryItemsCategoryDocLink = Doc

union SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocDocument = Doc

type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDoc {
  document: SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocDocument!
  label: String!
}

type SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLink {
  title: String!
  href: String!
}

union SidebarItemsItemsCategoryItemsCategoryItemsCategoryItems = SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDoc | SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLink

type SidebarItemsItemsCategoryItemsCategoryItemsCategory {
  title: String!
  link: String
  docLink: SidebarItemsItemsCategoryItemsCategoryItemsCategoryDocLink
  items: [SidebarItemsItemsCategoryItemsCategoryItemsCategoryItems]
}

union SidebarItemsItemsCategoryItemsCategoryItemsDocDocument = Doc

type SidebarItemsItemsCategoryItemsCategoryItemsDoc {
  document: SidebarItemsItemsCategoryItemsCategoryItemsDocDocument!
  label: String!
}

type SidebarItemsItemsCategoryItemsCategoryItemsLink {
  title: String!
  href: String!
}

union SidebarItemsItemsCategoryItemsCategoryItems = SidebarItemsItemsCategoryItemsCategoryItemsCategory | SidebarItemsItemsCategoryItemsCategoryItemsDoc | SidebarItemsItemsCategoryItemsCategoryItemsLink

type SidebarItemsItemsCategoryItemsCategory {
  title: String!
  link: String
  docLink: SidebarItemsItemsCategoryItemsCategoryDocLink
  items: [SidebarItemsItemsCategoryItemsCategoryItems]
}

union SidebarItemsItemsCategoryItemsDocDocument = Doc

type SidebarItemsItemsCategoryItemsDoc {
  document: SidebarItemsItemsCategoryItemsDocDocument!
  label: String!
}

type SidebarItemsItemsCategoryItemsLink {
  title: String!
  href: String!
}

union SidebarItemsItemsCategoryItems = SidebarItemsItemsCategoryItemsCategory | SidebarItemsItemsCategoryItemsDoc | SidebarItemsItemsCategoryItemsLink

type SidebarItemsItemsCategory {
  title: String!
  link: String
  docLink: SidebarItemsItemsCategoryDocLink
  items: [SidebarItemsItemsCategoryItems]
}

union SidebarItemsItemsDocDocument = Doc

type SidebarItemsItemsDoc {
  document: SidebarItemsItemsDocDocument!
  label: String!
}

type SidebarItemsItemsLink {
  title: String!
  href: String!
}

type SidebarItemsItemsDivider {
  title: String!
}

union SidebarItemsItems = SidebarItemsItemsCategory | SidebarItemsItemsDoc | SidebarItemsItemsLink | SidebarItemsItemsDivider

type SidebarItems {
  label: String!
  items: [SidebarItemsItems]
}

type Sidebar implements Node & Document {
  _warning: String
  label: String!
  items: [SidebarItems]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input SidebarItemsItemsCategoryDocLinkFilter {
  doc: DocFilter
}

input SidebarItemsItemsCategoryItemsCategoryDocLinkFilter {
  doc: DocFilter
}

input SidebarItemsItemsCategoryItemsCategoryItemsCategoryDocLinkFilter {
  doc: DocFilter
}

input SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocDocumentFilter {
  doc: DocFilter
}

input SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocFilter {
  document: SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocDocumentFilter
  label: StringFilter
}

input SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLinkFilter {
  title: StringFilter
  href: StringFilter
}

input SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsFilter {
  doc: SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocFilter
  link: SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLinkFilter
}

input SidebarItemsItemsCategoryItemsCategoryItemsCategoryFilter {
  title: StringFilter
  link: StringFilter
  docLink: SidebarItemsItemsCategoryItemsCategoryItemsCategoryDocLinkFilter
  items: SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsFilter
}

input SidebarItemsItemsCategoryItemsCategoryItemsDocDocumentFilter {
  doc: DocFilter
}

input SidebarItemsItemsCategoryItemsCategoryItemsDocFilter {
  document: SidebarItemsItemsCategoryItemsCategoryItemsDocDocumentFilter
  label: StringFilter
}

input SidebarItemsItemsCategoryItemsCategoryItemsLinkFilter {
  title: StringFilter
  href: StringFilter
}

input SidebarItemsItemsCategoryItemsCategoryItemsFilter {
  category: SidebarItemsItemsCategoryItemsCategoryItemsCategoryFilter
  doc: SidebarItemsItemsCategoryItemsCategoryItemsDocFilter
  link: SidebarItemsItemsCategoryItemsCategoryItemsLinkFilter
}

input SidebarItemsItemsCategoryItemsCategoryFilter {
  title: StringFilter
  link: StringFilter
  docLink: SidebarItemsItemsCategoryItemsCategoryDocLinkFilter
  items: SidebarItemsItemsCategoryItemsCategoryItemsFilter
}

input SidebarItemsItemsCategoryItemsDocDocumentFilter {
  doc: DocFilter
}

input SidebarItemsItemsCategoryItemsDocFilter {
  document: SidebarItemsItemsCategoryItemsDocDocumentFilter
  label: StringFilter
}

input SidebarItemsItemsCategoryItemsLinkFilter {
  title: StringFilter
  href: StringFilter
}

input SidebarItemsItemsCategoryItemsFilter {
  category: SidebarItemsItemsCategoryItemsCategoryFilter
  doc: SidebarItemsItemsCategoryItemsDocFilter
  link: SidebarItemsItemsCategoryItemsLinkFilter
}

input SidebarItemsItemsCategoryFilter {
  title: StringFilter
  link: StringFilter
  docLink: SidebarItemsItemsCategoryDocLinkFilter
  items: SidebarItemsItemsCategoryItemsFilter
}

input SidebarItemsItemsDocDocumentFilter {
  doc: DocFilter
}

input SidebarItemsItemsDocFilter {
  document: SidebarItemsItemsDocDocumentFilter
  label: StringFilter
}

input SidebarItemsItemsLinkFilter {
  title: StringFilter
  href: StringFilter
}

input SidebarItemsItemsDividerFilter {
  title: StringFilter
}

input SidebarItemsItemsFilter {
  category: SidebarItemsItemsCategoryFilter
  doc: SidebarItemsItemsDocFilter
  link: SidebarItemsItemsLinkFilter
  divider: SidebarItemsItemsDividerFilter
}

input SidebarItemsFilter {
  label: StringFilter
  items: SidebarItemsItemsFilter
}

input SidebarFilter {
  _warning: StringFilter
  label: StringFilter
  items: SidebarItemsFilter
}

type SidebarConnectionEdges {
  cursor: String!
  node: Sidebar
}

type SidebarConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [SidebarConnectionEdges]
}

type QuicklinkQuickLinksGroupLinksQuickLink {
  label: String!
  url: String!
}

type QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLink {
  label: String!
  url: String!
}

type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLink {
  label: String!
  url: String!
}

type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLink {
  label: String!
  url: String!
}

union QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinks = QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLink

type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroup {
  label: String!
  links: [QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinks]
}

union QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinks = QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLink | QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroup

type QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroup {
  label: String!
  links: [QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinks]
}

union QuicklinkQuickLinksGroupLinksSubGroupLinks = QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLink | QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroup

type QuicklinkQuickLinksGroupLinksSubGroup {
  label: String!
  links: [QuicklinkQuickLinksGroupLinksSubGroupLinks]
}

union QuicklinkQuickLinksGroupLinks = QuicklinkQuickLinksGroupLinksQuickLink | QuicklinkQuickLinksGroupLinksSubGroup

type QuicklinkQuickLinksGroup {
  label: String!
  links: [QuicklinkQuickLinksGroupLinks]
}

type Quicklink implements Node & Document {
  quickLinksGroup: [QuicklinkQuickLinksGroup]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input QuicklinkQuickLinksGroupLinksQuickLinkFilter {
  label: StringFilter
  url: StringFilter
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLinkFilter {
  label: StringFilter
  url: StringFilter
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLinkFilter {
  label: StringFilter
  url: StringFilter
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLinkFilter {
  label: StringFilter
  url: StringFilter
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksFilter {
  quickLink: QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLinkFilter
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupFilter {
  label: StringFilter
  links: QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksFilter
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksFilter {
  quickLink: QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLinkFilter
  subGroup: QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupFilter
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupFilter {
  label: StringFilter
  links: QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksFilter
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksFilter {
  quickLink: QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLinkFilter
  subGroup: QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupFilter
}

input QuicklinkQuickLinksGroupLinksSubGroupFilter {
  label: StringFilter
  links: QuicklinkQuickLinksGroupLinksSubGroupLinksFilter
}

input QuicklinkQuickLinksGroupLinksFilter {
  quickLink: QuicklinkQuickLinksGroupLinksQuickLinkFilter
  subGroup: QuicklinkQuickLinksGroupLinksSubGroupFilter
}

input QuicklinkQuickLinksGroupFilter {
  label: StringFilter
  links: QuicklinkQuickLinksGroupLinksFilter
}

input QuicklinkFilter {
  quickLinksGroup: QuicklinkQuickLinksGroupFilter
}

type QuicklinkConnectionEdges {
  cursor: String!
  node: Quicklink
}

type QuicklinkConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [QuicklinkConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateDoc(relativePath: String!, params: DocMutation!): Doc!
  createDoc(relativePath: String!, params: DocMutation!): Doc!
  updateSidebar(relativePath: String!, params: SidebarMutation!): Sidebar!
  createSidebar(relativePath: String!, params: SidebarMutation!): Sidebar!
  updateQuicklink(relativePath: String!, params: QuicklinkMutation!): Quicklink!
  createQuicklink(relativePath: String!, params: QuicklinkMutation!): Quicklink!
}

input DocumentUpdateMutation {
  doc: DocMutation
  sidebar: SidebarMutation
  quicklink: QuicklinkMutation
  relativePath: String
}

input DocumentMutation {
  doc: DocMutation
  sidebar: SidebarMutation
  quicklink: QuicklinkMutation
}

input DocMutation {
  title: String
  body: JSON
}

input SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocMutation {
  document: String
  label: String
}

input SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLinkMutation {
  title: String
  href: String
}

input SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsMutation {
  doc: SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsDocMutation
  link: SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsLinkMutation
}

input SidebarItemsItemsCategoryItemsCategoryItemsCategoryMutation {
  title: String
  link: String
  docLink: String
  items: [SidebarItemsItemsCategoryItemsCategoryItemsCategoryItemsMutation]
}

input SidebarItemsItemsCategoryItemsCategoryItemsDocMutation {
  document: String
  label: String
}

input SidebarItemsItemsCategoryItemsCategoryItemsLinkMutation {
  title: String
  href: String
}

input SidebarItemsItemsCategoryItemsCategoryItemsMutation {
  category: SidebarItemsItemsCategoryItemsCategoryItemsCategoryMutation
  doc: SidebarItemsItemsCategoryItemsCategoryItemsDocMutation
  link: SidebarItemsItemsCategoryItemsCategoryItemsLinkMutation
}

input SidebarItemsItemsCategoryItemsCategoryMutation {
  title: String
  link: String
  docLink: String
  items: [SidebarItemsItemsCategoryItemsCategoryItemsMutation]
}

input SidebarItemsItemsCategoryItemsDocMutation {
  document: String
  label: String
}

input SidebarItemsItemsCategoryItemsLinkMutation {
  title: String
  href: String
}

input SidebarItemsItemsCategoryItemsMutation {
  category: SidebarItemsItemsCategoryItemsCategoryMutation
  doc: SidebarItemsItemsCategoryItemsDocMutation
  link: SidebarItemsItemsCategoryItemsLinkMutation
}

input SidebarItemsItemsCategoryMutation {
  title: String
  link: String
  docLink: String
  items: [SidebarItemsItemsCategoryItemsMutation]
}

input SidebarItemsItemsDocMutation {
  document: String
  label: String
}

input SidebarItemsItemsLinkMutation {
  title: String
  href: String
}

input SidebarItemsItemsDividerMutation {
  title: String
}

input SidebarItemsItemsMutation {
  category: SidebarItemsItemsCategoryMutation
  doc: SidebarItemsItemsDocMutation
  link: SidebarItemsItemsLinkMutation
  divider: SidebarItemsItemsDividerMutation
}

input SidebarItemsMutation {
  label: String
  items: [SidebarItemsItemsMutation]
}

input SidebarMutation {
  _warning: String
  label: String
  items: [SidebarItemsMutation]
}

input QuicklinkQuickLinksGroupLinksQuickLinkMutation {
  label: String
  url: String
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLinkMutation {
  label: String
  url: String
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLinkMutation {
  label: String
  url: String
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLinkMutation {
  label: String
  url: String
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksMutation {
  quickLink: QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksQuickLinkMutation
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupMutation {
  label: String
  links: [QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupLinksMutation]
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksMutation {
  quickLink: QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksQuickLinkMutation
  subGroup: QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksSubGroupMutation
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupMutation {
  label: String
  links: [QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupLinksMutation]
}

input QuicklinkQuickLinksGroupLinksSubGroupLinksMutation {
  quickLink: QuicklinkQuickLinksGroupLinksSubGroupLinksQuickLinkMutation
  subGroup: QuicklinkQuickLinksGroupLinksSubGroupLinksSubGroupMutation
}

input QuicklinkQuickLinksGroupLinksSubGroupMutation {
  label: String
  links: [QuicklinkQuickLinksGroupLinksSubGroupLinksMutation]
}

input QuicklinkQuickLinksGroupLinksMutation {
  quickLink: QuicklinkQuickLinksGroupLinksQuickLinkMutation
  subGroup: QuicklinkQuickLinksGroupLinksSubGroupMutation
}

input QuicklinkQuickLinksGroupMutation {
  label: String
  links: [QuicklinkQuickLinksGroupLinksMutation]
}

input QuicklinkMutation {
  quickLinksGroup: [QuicklinkQuickLinksGroupMutation]
}

schema {
  query: Query
  mutation: Mutation
}
